<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.leeson.core.dao.ZsqhdapiDao">
<cache type="org.mybatis.caches.ehcache.EhcacheCache"/>
	<resultMap id="zsqhdapi" type="Zsqhdapi">
		<result property="id" column="id" />
		<result property="url" column="url" />
		<result property="publicurl" column="publicurl" />
		<result property="autourl" column="autourl" />
		<result property="state" column="state" />
		<result property="publicstate" column="publicstate" />
		<result property="autostate" column="autostate" />
	</resultMap>
	<!-- Select SQL -->
	<sql id="zsqhdapiSelector">
		SELECT
			<if test="fields != null">
${fields}			</if>
			<if test="fields == null">
			id,url,publicurl,autourl,state,publicstate,autostate
			</if>
		
		FROM zsqhd_api
	</sql>
	<sql id="zsqhdapiListWhere">
		<where>
		    <if test="id != null">
			 and 
				id=#{id}
			</if>
		    <if test="url != null">
			 and 
			<if test="urlLike == 0">
				url=#{url}
			</if>
			<if test="urlLike == 1">
				url like CONCAT('%','${url}','%')
			</if>
			</if>
		    <if test="publicurl != null">
			 and 
			<if test="publicurlLike == 0">
				publicurl=#{publicurl}
			</if>
			<if test="publicurlLike == 1">
				publicurl like CONCAT('%','${publicurl}','%')
			</if>
			</if>
		    <if test="autourl != null">
			 and 
			<if test="autourlLike == 0">
				autourl=#{autourl}
			</if>
			<if test="autourlLike == 1">
				autourl like CONCAT('%','${autourl}','%')
			</if>
			</if>
		    <if test="state != null">
			 and 
				state=#{state}
			</if>
		    <if test="publicstate != null">
			 and 
				publicstate=#{publicstate}
			</if>
		    <if test="autostate != null">
			 and 
				autostate=#{autostate}
			</if>
		</where>
	</sql>

	<!-- 用#号会导致druid连接池报错 -->
	<sql id="zsqhdapiListOrder">
		
			<if test="orderFields != null and orderFields.size >0">
			ORDER BY
			<foreach collection="orderFields" separator="," item="orderField">
				${orderField.fieldName} ${orderField.order}
			</foreach>
			</if>
		
	</sql>
	
	

	<sql id="zsqhdapiListLimit">
		<if test="startRow != null">
			limit #{startRow},#{pageSize}
		</if>
	</sql>

	<!-- 根据主键查询 -->
	<select id="getZsqhdapiByKey" resultMap="zsqhdapi" parameterType="hashMap">
		SELECT id,url,publicurl,autourl,state,publicstate,autostate FROM zsqhd_api
		WHERE
		id=#{id}
	</select>
	<select id="getZsqhdapiByKeys" resultMap="zsqhdapi"
		parameterType="ArrayList">
		SELECT id,url,publicurl,autourl,state,publicstate,autostate FROM zsqhd_api
		WHERE
		id in
		<foreach collection="list" separator="," item="id" open="(" close=")">
#{id}		</foreach>
	</select>

	<!-- 根据主键删除 -->
	<delete id="deleteByKey" parameterType="hashMap">
		DELETE FROM zsqhd_api
		WHERE
		id=#{id}
	</delete>
	
	<!-- 根据条件删除 -->
	<delete id="deleteByQuery" parameterType="Zsqhdapi">
		DELETE FROM zsqhd_api
		<include refid="zsqhdapiListWhere" />
	</delete>

	<!-- 根据主键批量删除 -->
	<delete id="deleteByKeys">
		DELETE FROM zsqhd_api
		WHERE
		id in
		<foreach collection="list" separator="," item="id" open="(" close=")">
#{id}		</foreach>
	</delete>
	
	<!-- 根据主键批量删除 -->
	<delete id="deleteAll">
		DELETE FROM zsqhd_api
	</delete>

	<!-- 根据主键更新非空字段 -->
	<update id="updateZsqhdapiByKey" parameterType="Zsqhdapi">
		UPDATE zsqhd_api
		<set>
		<trim suffixOverrides=",">
		<if test="id != null">
			id = #{id},
		</if>
		<if test="url != null">
			url = #{url},
		</if>
		<if test="publicurl != null">
			publicurl = #{publicurl},
		</if>
		<if test="autourl != null">
			autourl = #{autourl},
		</if>
		<if test="state != null">
			state = #{state},
		</if>
		<if test="publicstate != null">
			publicstate = #{publicstate},
		</if>
		<if test="autostate != null">
			autostate = #{autostate},
		</if>
		</trim>
		</set>
		WHERE
		id=#{id}
	</update>
	<!-- 根据主键更新所有字段 -->
	<update id="updateZsqhdapiByKeyAll" parameterType="Zsqhdapi">
		UPDATE zsqhd_api
		<set>
		<trim suffixOverrides=",">
			id = #{id},
			url = #{url},
			publicurl = #{publicurl},
			autourl = #{autourl},
			state = #{state},
			publicstate = #{publicstate},
			autostate = #{autostate},
		</trim>
		</set>
		WHERE
		id=#{id}
	</update>
	<!-- 分页 -->
	<select id="getZsqhdapiListWithPage" parameterType="ZsqhdapiQuery"
		resultMap="zsqhdapi">
		<include refid="zsqhdapiSelector" />
		<include refid="zsqhdapiListWhere" />
		<include refid="zsqhdapiListOrder" />
		<include refid="zsqhdapiListLimit" />
	</select>
	<!-- 数据总数 -->
	<select id="getZsqhdapiListCount" parameterType="ZsqhdapiQuery"
		resultType="int">
		SELECT count(1) FROM zsqhd_api
		<include refid="zsqhdapiListWhere" />
	</select>
	<!-- 数据集合 -->
	<select id="getZsqhdapiList" parameterType="ZsqhdapiQuery"
		resultMap="zsqhdapi">
		<include refid="zsqhdapiSelector" />
		<include refid="zsqhdapiListWhere" />
		<include refid="zsqhdapiListOrder" />
	</select>

	<!-- 如果使用自定义字段查询,则要使用resultClass否则会出现异常 -->
	<select id="getZsqhdapiListWithPageFields" parameterType="ZsqhdapiQuery"
		resultType="Zsqhdapi">
		<include refid="zsqhdapiSelector" />
		<include refid="zsqhdapiListWhere" />
		<include refid="zsqhdapiListOrder" />
		<include refid="zsqhdapiListLimit" />
	</select>
	<select id="$getZsqhdapiListFields" parameterType="ZsqhdapiQuery"
		resultType="Zsqhdapi">
		<include refid="zsqhdapiSelector" />
		<include refid="zsqhdapiListWhere" />
		<include refid="zsqhdapiListOrder" />
	</select>
	<!-- 添加 -->
	<insert id="addZsqhdapi" parameterType="Zsqhdapi">
		INSERT INTO zsqhd_api
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
					id,
			</if>
			<if test="url != null">
					url,
			</if>
			<if test="publicurl != null">
					publicurl,
			</if>
			<if test="autourl != null">
					autourl,
			</if>
			<if test="state != null">
					state,
			</if>
			<if test="publicstate != null">
					publicstate,
			</if>
			<if test="autostate != null">
					autostate,
			</if>
		</trim>
		VALUES
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
	 #{id},
			</if>
			<if test="url != null">
	 #{url},
			</if>
			<if test="publicurl != null">
	 #{publicurl},
			</if>
			<if test="autourl != null">
	 #{autourl},
			</if>
			<if test="state != null">
	 #{state},
			</if>
			<if test="publicstate != null">
	 #{publicstate},
			</if>
			<if test="autostate != null">
	 #{autostate},
			</if>
		</trim>
		<selectKey resultType="Long" keyProperty="id">
			SELECT LAST_INSERT_ID() AS ID
		</selectKey>
	</insert>
</mapper>
